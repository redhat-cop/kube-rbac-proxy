name: Build UBI latest
on:
  workflow_call:
    secrets:
      QUAY_USERNAME:
        description: "Username for Registry"
        required: true
      QUAY_PASSWORD:
        description: "Password for Registry"
        required: true
      IMAGE_REPOSITORY:
        description: "Registry image e.g. quay.io/trevorbox/$repoisitory-name"
        required: false
    inputs:
      VERSION_OVERRIDE:
        description: "Use this to override the version tag, useful for latest base image builds without overwriting previous tags"
        type: string
        required: false
      TAG_LATEST:
        type: boolean
        description: "Use this to also update the latest tag after a build"
        default: false
  push:
  pull_request:
env:
  QUAY_PATH: quay.io/trevorbox/kube-rbac-proxy
  DOCKER_REPO: quay.io/trevorbox/kube-rbac-proxy
  BASEIMAGE: registry.access.redhat.com/ubi9/ubi-minimal:latest
  go-version: '1.24'
  kind-version: 'v0.25.0'
jobs:
  check-license:
    runs-on: ubuntu-latest
    name: Check license
    steps:
    - uses: actions/checkout@v2
    - run: make check-license
  generate:
    runs-on: ubuntu-latest
    name: Generate
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: ${{ env.go-version }}
    - run: make generate && git diff --exit-code
  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
    - uses: actions/checkout@v2
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v2
      with:
        version: latest
        args: --timeout=5m
  build:
    runs-on: ubuntu-latest
    name: Build
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: ${{ env.go-version }}
    - run: make build
  unit-tests:
    runs-on: ubuntu-latest
    name: Unit tests
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: ${{ env.go-version }}
    - run: make test-unit
  e2e-tests:
    runs-on: ubuntu-latest
    name: E2E tests
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Start kind & create cluster
      uses: engineerd/setup-kind@v0.5.0
      with:
        version: ${{ env.kind-version }}
        config: test/e2e/kind-config/kind-config.yaml
        wait: 300s
    - name: Wait for cluster to finish bootstraping
      run: kubectl wait --for=condition=Ready pods --all --all-namespaces --timeout=300s
    - name: Setup golang for make test-e2e
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.go-version }}
    - name: Create container & run tests
      run: |
        VERSION=local VERSION_SEMVER=$(cat ./VERSION) make container
        kind load docker-image ${QUAY_PATH}:local
        until docker exec $(kind get nodes) crictl images | grep "${QUAY_PATH}"; do
          echo "no kube-rbac-proxy image"
          sleep 1
        done
        make test-e2e
  publish:
    runs-on: ubuntu-latest
    name: Publish container image to Quay
    if: github.event_name == 'push'
    needs:
    - check-license
    - generate
    - build
    - unit-tests
    - e2e-tests
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup golang for building
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.go-version }}
    - name: Login to Quay.io
      uses: docker/login-action@v1
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}
    - name: Build images and push 
      run: ./scripts/publish-ubi.sh
